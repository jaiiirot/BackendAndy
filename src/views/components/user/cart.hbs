<section>
  <header class="text-center">
    <h1 class="text-xl font-bold text-gray-900 sm:text-3xl">Tu Carrito</h1>
    {{#if user.permit}}
    {{else}}
      <p class="text-sm text-red-700">No se puede finalizar la compra, no hay stock de algunos productos</p>
    {{/if}}
  </header>
</section>
<section class="w-11/12 m-auto mt-4 flex flex-col md:flex-row">
  <article class="w-full">
    <ul class="space-y-4 list-item-cart">
      {{#each user.products_cart}}
        <li class="flex justify-between items-center {{#if this.confirm}} text-white bg-red-500 {{/if}}" data-prod-id="{{this.pid}}">
          <div class="flex items-center space-x-4">
            <img
              src="{{this.photo.[0]}}"
              alt="{{this.title}}"
              class="w-16 h-16 object-cover rounded"
            />
            <div class="flex flex-col">
              <span class="text-sm">{{this.title}}</span>
              <span class="text-sm"> 
                {{#if this.confirm}}
                  <span class="text-xs text-white">No Hay stock, stock: {{this.stock}}</span>
                {{else}}
                  $ <span class="price-item-prod">{{this.price}}</span>
                {{/if}}
              </span>
            </div>
          </div>
          <div class="flex gap-2 h-min items-center justify-end">
            <id class="w-[100px] flex gap-2 items-center justify-between">
              <span
                class="bg-[#000] text-white px-2 cursor-pointer" onclick="actionLess('{{this.cid}}','{{this._id}}')">-</span>
              <span class="text-sm quantity-item-prod" data-cid="{{this.cid}}" data-pid="{{this._id}}">{{this.quantity}}</span>
              <span
                class="bg-[#000] text-white px-2 cursor-pointer" onclick="actionAdd('{{this.cid}}','{{this._id}}')">+</span>
            </id>
            <div class="">
              <span
                class="bg-[#EF4444] text-white px-2 cursor-pointer py-2 rounded-lg"
              >
              <i class="fa-solid fa-trash"></i>
              </span>
            </div>
          </div>
        </li>
      {{/each}}
    </ul>
  </article>
  <article class="w-full">
    <div class="mt-8 flex justify-end border-t border-gray-100 pt-8">
      <div class="w-screen max-w-lg space-y-4">
        <div class="space-y-0.5 text-sm text-gray-700">
          <div class="flex justify-between !text-base font-medium">
            <h2 class="text-bold">Total</h2>
            <h2>$ <span id="amount-total"></span></h2>
          </div>
        </div>

        <div class="flex justify-end w-full gap-4 flex-wrap">
          <span
            href="#"
            id="delete-cart"
            class="block rounded bg-gray-700 px-5 py-3 text-sm text-gray-100 transition hover:bg-gray-600 cursor-pointer"
          >
            Eliminar carrito
          </span>
          {{#if user.permit}}
            <button
              onclick="postTicket('{{user.info.cart}}')"
              class="block rounded bg-gray-700 px-5 py-3 text-sm text-gray-100 transition hover:bg-gray-600"
              id="finalize-purchase"
            >
              Finalizar compra
            </button>
          {{/if}}
        </div>
      </div>
    </div>
  </article>
</section>

<!-- Loader -->
<div id="loader" class="fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center hidden">
  <div class="loader"></div>
</div>

<script>
  const item_price = document.querySelectorAll('.price-item-prod');
  const item_quantity = document.querySelectorAll('.quantity-item-prod');
  const total_price = document.getElementById('amount-total');
  let total = 0;

  item_price.forEach((item, i) => {
    const price = parseInt(item.textContent) * parseInt(item_quantity[i].textContent);
    total += price;
  });

  total_price.textContent = total;

  item_quantity.forEach(async (item, i) => {
    if (parseInt(item.textContent) === 0) {
      await fetch(`/api/carts/${item.dataset.cid}/productos/${item.dataset.pid}`, {
        method: 'DELETE'
      });
      window.location.reload();
    }
  });

  const actionLess = async (cid, pid) => {
    await fetch(`/api/carts/${cid}/productos/${pid}?action=less`, {
      method: 'PUT'
    });
    window.location.reload();
  };

  const actionAdd = async (cid, pid) => {
    await fetch(`/api/carts/${cid}/productos/${pid}?action=add`, {
      method: 'PUT'
    });
    window.location.reload();
  };

  const postTicket = async (cid) => {
    const finalizeButton = document.getElementById('finalize-purchase');
    const loader = document.getElementById('loader');
    loader.classList.remove('hidden');
    finalizeButton.disabled = true;

    try {
      const response = await fetch(`/api/carts/${cid}/purchase`, {
        method: 'POST'
      });
      const data = await response.json();
      if (data.status === 'success') {
        Swal.fire({
          title: 'Compra realizada, Factura Electronica en tu Mail',
          text: `Gracias por tu compra \n Nos pondremos en contacto contigo para coordinar la entrega \n ${data.message}`,
          icon: 'success',
          allowOutsideClick: false,
          confirmButtonText: 'Aceptar'
        }).then((e) => {
          if (e.isConfirmed) window.location.href = '/';
        });
      } else {
        Swal.fire({
          title: 'Error',
          text: 'No se pudo realizar la compra',
          icon: 'error',
          confirmButtonText: 'Aceptar'
        });
      }
    } catch (error) {
      Swal.fire({
        title: 'Error',
        text: 'Hubo un problema con la comunicaci√≥n con el servidor.',
        icon: 'error',
        confirmButtonText: 'Aceptar'
      });
    } finally {
      loader.classList.add('hidden');
      finalizeButton.disabled = false;
    }
  };
</script>

<style>
  .loader {
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-left-color: white;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>
