<div class="fixed bottom-0 right-0 z-10 max-w-md mx-auto p-4">
  <div class="w-full">
    <div class="chatbox hidden w-full max-w-[550px] rounded-lg border border-[#000000] bg-white">
      <div class="flex items-center justify-between rounded-t-lg bg-[#000000] py-4 px-9">
        <h3 class="text-xl font-bold text-white">ILICITO</h3>
        <button onclick="toggleChatbox()" class="text-white">
          {{>icons/x y="15" x="15"}}
        </button>
      </div>
      <div id="container-chat" data-mid="{{user.info.chat}}">
        <div class="bg-white rounded-lg shadow-md p-4">
          <div class="flex items-center mb-4">
            <div class="ml-3">
              <p class="text-xl font-medium">Consulta tus dudas al momento</p>
              <p class="text-gray-500">ðŸŸ¢ En lÃ­nea</p>
            </div>
          </div>
          <div class="space-y-1 max-h-[200px] overflow-y-scroll" id="messages-container">
            {{!-- MENSAJES --}}
          </div>
          <div class="mt-4 flex items-center">
            <input
              type="text"
              placeholder="Escribe tu mensaje..."
              id="message-input"
              data-email="{{user.info.email}}"
              class="flex-1 py-2 px-3 rounded-full bg-gray-100 focus:outline-none"
            />
            <input type="button" value="Enviar" class="bg-[#000000] text-white px-4 py-2 rounded-full ml-3 hover:bg-[#333333]" />
          </div>
        </div>
      </div>
    </div>
    <div class="mx-auto mt-1 flex max-w-[550px] items-center justify-end space-x-5">
      <button
        class="flex h-[50px] w-[50px] items-center justify-center rounded-full bg-[#000000] text-white"
        onclick="toggleChatbox()"
      >
        <span class="cross-icon hidden">
          {{>icons/x y="15" x="15"}}
        </span>
        <span class="chat-icon">
          {{>icons/message y="25" x="25"}}
        </span>
      </button>
    </div>
  </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
  const chatbox = document.querySelector(".chatbox");
  const crossIcon = document.querySelector(".cross-icon");
  const chatIcon = document.querySelector(".chat-icon");

  function toggleChatbox() {
    chatbox.classList.toggle("hidden");
    crossIcon.classList.toggle("hidden");
    chatIcon.classList.toggle("hidden");
  }

  const socket = io();
  const messageId = document.getElementById("container-chat");
  const messageInput = document.getElementById("message-input");
  const messagesContainer = document.getElementById("messages-container");

  socket.emit("onchat", messageId.dataset.mid);
  socket.on("loadingchat", async (messages) => {
    messagesContainer.innerHTML = "";
    messages.forEach((msg) => {
      const div = `<div class="flex items-start justify-end"><div class="bg-[#010101] p-3 rounded-lg"><p class="text-sm text-white">${msg.message}</p></div></div>`;
      messagesContainer.innerHTML += div;
    });
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
  });

 messageInput.addEventListener("keypress", (e) => {
  if (e.key === "Enter") {
    const message = e.target.value.trim();
    if (message !== "") {
      socket.emit("input_chat", { mid: messageId.dataset.mid, role: "user", message: message });
      e.target.value = "";
    }
  }
});
  socket.on("container_chat", (messages) => {
    messagesContainer.innerHTML = "";
    messages.forEach((msg) => {
      let div;
      if (msg.role === "user") {
        div = `<div class="flex items-end justify-end"><div class="bg-[#000000] p-3 rounded-lg"><p class="text-sm text-white">${msg.message}</p></div></div>`;
      } else {
        div = `<div class="flex items-start"><div class="ml-3 bg-gray-100 p-3 rounded-lg"><p class="text-sm text-gray-800">${msg.message}</p></div></div>`;
      }
      messagesContainer.innerHTML += div;
    });
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
  });
</script>
