openapi: 3.0.0
info:
  title: API de Sesiones de Usuario
  version: 1.0.0
  description: API para la gestión de sesiones de usuario

servers:
  - url: http://localhost:3000/api/sessions
    description: Servidor local

paths:
  /register:
    post:
      summary: Registrar un nuevo usuario
      description: Registrar un nuevo usuario en la base de datos.
      tags:
        - Sesiones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario registrado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: Mensaje de éxito
        '400':
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      summary: Iniciar sesión de usuario
      description: Iniciar sesión de un usuario registrado en la base de datos.
      tags:
        - Sesiones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginData'
      responses:
        '200':
          description: Sesión iniciada con éxito
          content:
            application/json:
              schema:
                type: string
                description: Token de autenticación JWT
        '400':
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /logout:
    get:
      summary: Cerrar sesión de usuario
      description: Cerrar sesión del usuario actual.
      tags:
        - Sesiones
      responses:
        '200':
          description: Sesión cerrada con éxito

  /auth/github:
    get:
      summary: Iniciar sesión con GitHub
      description: Iniciar sesión de un usuario utilizando GitHub como proveedor de autenticación.
      tags:
        - Sesiones
      responses:
        '302':
          description: Redirección a la página de autenticación de GitHub

  /auth/github/callback:
    get:
      summary: Callback de autenticación de GitHub
      description: Callback de autenticación después de iniciar sesión con GitHub.
      tags:
        - Sesiones
      responses:
        '302':
          description: Redirección después de la autenticación con GitHub

  /current:
    get:
      summary: Obtener información del usuario actual
      description: Obtener información del usuario autenticado actualmente.
      tags:
        - Sesiones
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Información del usuario recuperada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  '/{uid}':
    delete:
      summary: Eliminar usuario por ID
      description: Eliminar un usuario de la base de datos por su ID.
      tags:
        - Sesiones
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario eliminado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: Mensaje de éxito
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          description: Nombre de usuario del usuario
        photo_user:
          type: string
          description: URL de la foto del usuario
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario (hashed)
        age:
          type: integer
          description: Edad del usuario
        cart:
          type: object
          description: Carrito del usuario
          properties:
            cid:
              type: string
              description: ID del carrito del usuario
        messages:
          type: object
          description: Mensajes del usuario
          properties:
            mid:
              type: string
              description: ID del mensaje del usuario
        role:
          type: string
          description: Rol del usuario
          enum: [CLIENT, ADMIN]
